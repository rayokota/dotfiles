set hlsearch
set incsearch
set showmode
set number
set scrolloff=3
set history=100000
set clipboard=unnamed

" https://youtrack.jetbrains.com/issue/VIM-1521
set commentary

" Map the leader key to a spacebar
" See Mastering Vim, by Ruslan Osipov
let mapleader=" "

" Useful mappings
source ~/.vimrc.keymap

" ==================================================
" Show all the provided actions via `:actionlist`
" ==================================================

" SlickEdit-like bindings
nnoremap <C-.> :action GotoDeclaration<CR>
nnoremap <C-,> :action Back<CR>
nnoremap <C-/> :action ShowUsages<CR>
nnoremap <A-.> :action GotoImplementation<CR>
nnoremap <A-/> :action FindInPath<CR>

nnoremap <Leader>;; :action CommentByLineComment<CR>

nnoremap <Leader>bb :action ToggleLineBreakpoint<CR>
nnoremap <Leader>br :action ViewBreakpoints<CR>

nnoremap <Leader>cd :action ChooseDebugConfiguration<CR>
nnoremap <Leader>cr :action ChooseRunConfiguration<CR>
nnoremap <Leader>cv :action ChangeView<CR>

nnoremap <Leader>fp :action FindInPath<CR>
nnoremap <Leader>fs :action FileStructurePopup<CR>
nnoremap <Leader>fu :action FindUsages<CR>

nnoremap <Leader>ga :action GotoAction<CR>
nnoremap <Leader>gc :action GotoClass<CR>
nnoremap <Leader>gd :action GotoDeclaration<CR>
nnoremap <Leader>gf :action GotoFile<CR>
nnoremap <Leader>gi :action GotoImplementation<CR>
nnoremap <Leader>gn :action Generate<CR>
nnoremap <Leader>gp :action SelectInProjectView<CR>
nnoremap <Leader>gr :action GotoRelated<CR>
nnoremap <Leader>gs :action GotoSymbol<CR>
nnoremap <Leader>gt :action GotoTest<CR>
nnoremap <Leader>gu :action GotoSuperMethod<CR>

nnoremap <Leader>ic :action InspectCode<CR>

nnoremap <Leader>jc :action JumpToLastChange<CR>
nnoremap <Leader>jw :action JumpToLastWindow<CR>

nnoremap <Leader>mv :action ActivateMavenProjectsToolWindow<CR>

nnoremap <Leader>oi :action OptimizeImports<CR>

nnoremap <Leader>re :action RenameElement<CR>
nnoremap <Leader>rf :action RenameFile<CR>

nnoremap <Leader>se :action SearchEverywhere<CR>
nnoremap <Leader>sf :action ShowFilePath<CR>
nnoremap <Leader>sp :action ShowPopupMenu<CR>
nnoremap <Leader>sr :action RecentFiles<CR>
nnoremap <Leader>su :action ShowUsages<CR>

nnoremap <Leader>tc :action CloseActiveTab<CR>
nnoremap <Leader>tl Vy<CR>:action ActivateTerminalToolWindow<CR>
vnoremap <Leader>tl y<CR>:action ActivateTerminalToolWindow<CR>

nnoremap ]e :action GotoNextError<CR>
nnoremap [e :action GotoPreviousError<CR>

" ===================================================================
" The following are from https://github.com/cursive-ide/cursive/wiki/Mapping-IdeaVim-actions-to-Cursive-actions
" Also see https://github.com/cursive-ide/cursive/wiki/IdeaVim-issues
" ===================================================================

" vim delete and change, with sexps!
map <leader>x :action :cursive.actions.paredit/kill-sexp<CR>
map <leader>d :action :cursive.actions.paredit/kill<CR>
map <leader>c :action :cursive.actions.paredit/kill-sexp<CR>i

" Since kill copies to system clipboard, it's nice to have easy access to clipboard paste
map <leader>p "+p

" Sexp editing mappings straight from paredit.vim
map <leader>J :action :cursive.actions.paredit/join<CR>
map <leader>O :action :cursive.actions.paredit/split<CR>
map <leader>S :action :cursive.actions.paredit/splice<CR>
map <leader>I :action :cursive.actions.paredit/raise<CR>

" Splice backwards and forwards
map <leader>k :action :cursive.actions.paredit/splice-killing-backwards<CR>
map <leader>j :action :cursive.actions.paredit/splice-killing-forwards<CR>

" Slurp and barf
map <leader>l :action :cursive.actions.paredit/barf-forwards<CR>
map <leader>h :action :cursive.actions.paredit/slurp-forwards<CR>
map <leader>L :action :cursive.actions.paredit/slurp-backwards<CR>
map <leader>H :action :cursive.actions.paredit/barf-backwards<CR>

" leader + wrapping symbol for wrapping
map <leader>( :action :cursive.actions.paredit/wrap-paren<CR>
map <leader>[ :action :cursive.actions.paredit/wrap-square<CR>
map <leader>{ :action :cursive.actions.paredit/wrap-curly<CR>
map <leader>" :action :cursive.actions.paredit/wrap-quotes<CR>

" Cycle collection
map <leader>C :action :cursive.actions.paredit/cycle-collection-type<CR>

" Evaluate sexp like in vim-fireplace
map cpp :action :cursive.repl.actions/run-top-sexp<CR>

" Force a single "parinference" when in paredit mode and reformat
map <leader>rp :action :cursive.actions.paredit/toggle<CR>:action :cursive.actions.paredit/toggle<CR>kj:action :cursive.actions.paredit/toggle<CR>:action ReformatCode<CR>
